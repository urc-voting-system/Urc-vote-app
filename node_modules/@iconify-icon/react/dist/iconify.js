"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/iconify.ts
var iconify_exports = {};
__export(iconify_exports, {
  Icon: () => Icon,
  _api: () => import_iconify_icon2._api,
  addAPIProvider: () => import_iconify_icon2.addAPIProvider,
  addCollection: () => import_iconify_icon2.addCollection,
  addIcon: () => import_iconify_icon2.addIcon,
  appendCustomStyle: () => import_iconify_icon2.appendCustomStyle,
  buildIcon: () => import_iconify_icon2.buildIcon,
  calculateSize: () => import_iconify_icon2.calculateSize,
  disableCache: () => import_iconify_icon2.disableCache,
  enableCache: () => import_iconify_icon2.enableCache,
  getIcon: () => import_iconify_icon2.getIcon,
  iconExists: () => import_iconify_icon2.iconExists,
  iconLoaded: () => import_iconify_icon2.iconLoaded,
  listIcons: () => import_iconify_icon2.listIcons,
  loadIcon: () => import_iconify_icon2.loadIcon,
  loadIcons: () => import_iconify_icon2.loadIcons
});
module.exports = __toCommonJS(iconify_exports);
var import_react = __toESM(require("react"));
var import_iconify_icon = require("iconify-icon");
var import_iconify_icon2 = require("iconify-icon");
var Icon = import_react.default.forwardRef(
  (props, ref) => {
    const newProps = {
      ...props,
      ref
    };
    if (typeof props.icon === "object") {
      newProps.icon = JSON.stringify(props.icon);
    }
    if (!props.inline) {
      delete newProps.inline;
    }
    if (props.className) {
      newProps["class"] = props.className;
    }
    return import_react.default.createElement("iconify-icon", newProps);
  }
);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Icon,
  _api,
  addAPIProvider,
  addCollection,
  addIcon,
  appendCustomStyle,
  buildIcon,
  calculateSize,
  disableCache,
  enableCache,
  getIcon,
  iconExists,
  iconLoaded,
  listIcons,
  loadIcon,
  loadIcons
});
